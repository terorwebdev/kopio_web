import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, NgZone } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class ClickOutsideDirective implements OnInit, OnChanges, OnDestroy {
    private _el;
    private _ngZone;
    private platformId;
    clickOutsideEnabled: boolean;
    attachOutsideOnClick: boolean;
    delayClickOutsideInit: boolean;
    emitOnBlur: boolean;
    exclude: string;
    excludeBeforeClick: boolean;
    clickOutsideEvents: string;
    clickOutside: EventEmitter<Event>;
    private _nodesExcluded;
    private _events;
    constructor(_el: ElementRef, _ngZone: NgZone, platformId: Object);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private _init;
    private _initOnClickBody;
    private _excludeCheck;
    private _onClickBody;
    private _onWindowBlur;
    private _emit;
    private _shouldExclude;
    private _initClickOutsideListener;
    private _removeClickOutsideListener;
    private _initAttachOutsideOnClickListener;
    private _removeAttachOutsideOnClickListener;
    private _initWindowBlurListener;
    private _removeWindowBlurListener;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClickOutsideDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClickOutsideDirective, "[clickOutside]", never, {
    "clickOutsideEnabled": "clickOutsideEnabled";
    "attachOutsideOnClick": "attachOutsideOnClick";
    "delayClickOutsideInit": "delayClickOutsideInit";
    "emitOnBlur": "emitOnBlur";
    "exclude": "exclude";
    "excludeBeforeClick": "excludeBeforeClick";
    "clickOutsideEvents": "clickOutsideEvents";
}, {
    "clickOutside": "clickOutside";
}, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ClickOutsideDirective>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpY2stb3V0c2lkZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiY2xpY2stb3V0c2lkZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xpY2tPdXRzaWRlRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBfZWw7XG4gICAgcHJpdmF0ZSBfbmdab25lO1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBjbGlja091dHNpZGVFbmFibGVkOiBib29sZWFuO1xuICAgIGF0dGFjaE91dHNpZGVPbkNsaWNrOiBib29sZWFuO1xuICAgIGRlbGF5Q2xpY2tPdXRzaWRlSW5pdDogYm9vbGVhbjtcbiAgICBlbWl0T25CbHVyOiBib29sZWFuO1xuICAgIGV4Y2x1ZGU6IHN0cmluZztcbiAgICBleGNsdWRlQmVmb3JlQ2xpY2s6IGJvb2xlYW47XG4gICAgY2xpY2tPdXRzaWRlRXZlbnRzOiBzdHJpbmc7XG4gICAgY2xpY2tPdXRzaWRlOiBFdmVudEVtaXR0ZXI8RXZlbnQ+O1xuICAgIHByaXZhdGUgX25vZGVzRXhjbHVkZWQ7XG4gICAgcHJpdmF0ZSBfZXZlbnRzO1xuICAgIGNvbnN0cnVjdG9yKF9lbDogRWxlbWVudFJlZiwgX25nWm9uZTogTmdab25lLCBwbGF0Zm9ybUlkOiBPYmplY3QpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBwcml2YXRlIF9pbml0O1xuICAgIHByaXZhdGUgX2luaXRPbkNsaWNrQm9keTtcbiAgICBwcml2YXRlIF9leGNsdWRlQ2hlY2s7XG4gICAgcHJpdmF0ZSBfb25DbGlja0JvZHk7XG4gICAgcHJpdmF0ZSBfb25XaW5kb3dCbHVyO1xuICAgIHByaXZhdGUgX2VtaXQ7XG4gICAgcHJpdmF0ZSBfc2hvdWxkRXhjbHVkZTtcbiAgICBwcml2YXRlIF9pbml0Q2xpY2tPdXRzaWRlTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBfcmVtb3ZlQ2xpY2tPdXRzaWRlTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBfaW5pdEF0dGFjaE91dHNpZGVPbkNsaWNrTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBfcmVtb3ZlQXR0YWNoT3V0c2lkZU9uQ2xpY2tMaXN0ZW5lcjtcbiAgICBwcml2YXRlIF9pbml0V2luZG93Qmx1ckxpc3RlbmVyO1xuICAgIHByaXZhdGUgX3JlbW92ZVdpbmRvd0JsdXJMaXN0ZW5lcjtcbn1cbiJdfQ==