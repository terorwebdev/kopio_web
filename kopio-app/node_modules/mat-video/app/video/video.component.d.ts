import { AfterViewInit, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';
import { ThemePalette } from '@angular/material/core';
import { EventService } from './services/event.service';
import * as ɵngcc0 from '@angular/core';
export declare class MatVideoComponent implements AfterViewInit, OnDestroy {
    private renderer;
    private evt;
    private player;
    private video;
    src: string;
    title: string;
    autoplay: boolean;
    preload: boolean;
    loop: boolean;
    quality: boolean;
    fullscreen: boolean;
    showFrameByFrame: boolean;
    fps: number;
    download: boolean;
    color: ThemePalette;
    spinner: string;
    poster: string;
    keyboard: boolean;
    overlay: boolean;
    muted: boolean;
    mutedChange: EventEmitter<boolean>;
    time: number;
    timeChange: EventEmitter<number>;
    playing: boolean;
    isFullscreen: boolean;
    videoWidth: number;
    videoHeight: number;
    lastTime: number;
    videoLoaded: boolean;
    private isMouseMoving;
    private isMouseMovingTimer;
    private isMouseMovingTimeout;
    private events;
    constructor(renderer: Renderer2, evt: EventService);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    load(): void;
    getVideoTag(): HTMLVideoElement | null;
    evLoadedMetadata(event: any): void;
    evMouseMove(event: any): void;
    evTimeUpdate(event: any): void;
    getOverlayClass(activeClass: string, inactiveClass: string): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatVideoComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatVideoComponent, "mat-video", never, {
    "src": "src";
    "title": "title";
    "autoplay": "autoplay";
    "preload": "preload";
    "loop": "loop";
    "quality": "quality";
    "fullscreen": "fullscreen";
    "showFrameByFrame": "showFrameByFrame";
    "fps": "fps";
    "download": "download";
    "color": "color";
    "spinner": "spinner";
    "poster": "poster";
    "keyboard": "keyboard";
    "overlay": "overlay";
    "muted": "muted";
    "time": "time";
}, {
    "mutedChange": "mutedChange";
    "timeChange": "timeChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInZpZGVvLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XHJcbmltcG9ydCB7IEV2ZW50U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZXZlbnQuc2VydmljZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1hdFZpZGVvQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcclxuICAgIHByaXZhdGUgcmVuZGVyZXI7XHJcbiAgICBwcml2YXRlIGV2dDtcclxuICAgIHByaXZhdGUgcGxheWVyO1xyXG4gICAgcHJpdmF0ZSB2aWRlbztcclxuICAgIHNyYzogc3RyaW5nO1xyXG4gICAgdGl0bGU6IHN0cmluZztcclxuICAgIGF1dG9wbGF5OiBib29sZWFuO1xyXG4gICAgcHJlbG9hZDogYm9vbGVhbjtcclxuICAgIGxvb3A6IGJvb2xlYW47XHJcbiAgICBxdWFsaXR5OiBib29sZWFuO1xyXG4gICAgZnVsbHNjcmVlbjogYm9vbGVhbjtcclxuICAgIHNob3dGcmFtZUJ5RnJhbWU6IGJvb2xlYW47XHJcbiAgICBmcHM6IG51bWJlcjtcclxuICAgIGRvd25sb2FkOiBib29sZWFuO1xyXG4gICAgY29sb3I6IFRoZW1lUGFsZXR0ZTtcclxuICAgIHNwaW5uZXI6IHN0cmluZztcclxuICAgIHBvc3Rlcjogc3RyaW5nO1xyXG4gICAga2V5Ym9hcmQ6IGJvb2xlYW47XHJcbiAgICBvdmVybGF5OiBib29sZWFuO1xyXG4gICAgbXV0ZWQ6IGJvb2xlYW47XHJcbiAgICBtdXRlZENoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+O1xyXG4gICAgdGltZTogbnVtYmVyO1xyXG4gICAgdGltZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBwbGF5aW5nOiBib29sZWFuO1xyXG4gICAgaXNGdWxsc2NyZWVuOiBib29sZWFuO1xyXG4gICAgdmlkZW9XaWR0aDogbnVtYmVyO1xyXG4gICAgdmlkZW9IZWlnaHQ6IG51bWJlcjtcclxuICAgIGxhc3RUaW1lOiBudW1iZXI7XHJcbiAgICB2aWRlb0xvYWRlZDogYm9vbGVhbjtcclxuICAgIHByaXZhdGUgaXNNb3VzZU1vdmluZztcclxuICAgIHByaXZhdGUgaXNNb3VzZU1vdmluZ1RpbWVyO1xyXG4gICAgcHJpdmF0ZSBpc01vdXNlTW92aW5nVGltZW91dDtcclxuICAgIHByaXZhdGUgZXZlbnRzO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZXZ0OiBFdmVudFNlcnZpY2UpO1xyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG4gICAgbG9hZCgpOiB2b2lkO1xyXG4gICAgZ2V0VmlkZW9UYWcoKTogSFRNTFZpZGVvRWxlbWVudCB8IG51bGw7XHJcbiAgICBldkxvYWRlZE1ldGFkYXRhKGV2ZW50OiBhbnkpOiB2b2lkO1xyXG4gICAgZXZNb3VzZU1vdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBldlRpbWVVcGRhdGUoZXZlbnQ6IGFueSk6IHZvaWQ7XHJcbiAgICBnZXRPdmVybGF5Q2xhc3MoYWN0aXZlQ2xhc3M6IHN0cmluZywgaW5hY3RpdmVDbGFzczogc3RyaW5nKTogYW55O1xyXG59XHJcbiJdfQ==