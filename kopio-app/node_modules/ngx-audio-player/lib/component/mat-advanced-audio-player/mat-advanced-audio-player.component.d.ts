import { OnInit } from '@angular/core';
import { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';
import { Track } from '../../model/track.model';
import { BaseAudioPlayerFunctions } from '../base/base-audio-player-components';
import { MatSlider } from '@angular/material/slider';
import { MatTableDataSource } from '@angular/material/table';
import { MatPaginator } from '@angular/material/paginator';
import * as ɵngcc0 from '@angular/core';
export declare class MatAdvancedAudioPlayerComponent extends BaseAudioPlayerFunctions implements OnInit {
    private playlistService;
    displayedColumns: string[];
    timeLineDuration: MatSlider;
    dataSource: MatTableDataSource<Track>;
    paginator: MatPaginator;
    playlistData: Track[];
    displayTitle: boolean;
    displayPlaylist: boolean;
    pageSizeOptions: number[];
    expanded: boolean;
    autoPlay: boolean;
    displayVolumeControls: boolean;
    playlistTrack: any;
    constructor(playlistService: AudioPlayerService);
    ngOnInit(): void;
    matPaginator: MatPaginator;
    setDataSourceAttributes(): void;
    nextSong(): void;
    previousSong(): void;
    resetSong(): void;
    selectTrack(index: number): void;
    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean;
    playlist: Track[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatAdvancedAudioPlayerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatAdvancedAudioPlayerComponent, "mat-advanced-audio-player", never, {
    "displayTitle": "displayTitle";
    "displayPlaylist": "displayPlaylist";
    "pageSizeOptions": "pageSizeOptions";
    "expanded": "expanded";
    "autoPlay": "autoPlay";
    "displayVolumeControls": "displayVolumeControls";
    "playlist": "playlist";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWFkdmFuY2VkLWF1ZGlvLXBsYXllci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibWF0LWFkdmFuY2VkLWF1ZGlvLXBsYXllci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXVkaW9QbGF5ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9hdWRpby1wbGF5ZXItc2VydmljZS9hdWRpby1wbGF5ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBUcmFjayB9IGZyb20gJy4uLy4uL21vZGVsL3RyYWNrLm1vZGVsJztcbmltcG9ydCB7IEJhc2VBdWRpb1BsYXllckZ1bmN0aW9ucyB9IGZyb20gJy4uL2Jhc2UvYmFzZS1hdWRpby1wbGF5ZXItY29tcG9uZW50cyc7XG5pbXBvcnQgeyBNYXRTbGlkZXIgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbGlkZXInO1xuaW1wb3J0IHsgTWF0VGFibGVEYXRhU291cmNlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xuaW1wb3J0IHsgTWF0UGFnaW5hdG9yIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcGFnaW5hdG9yJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1hdEFkdmFuY2VkQXVkaW9QbGF5ZXJDb21wb25lbnQgZXh0ZW5kcyBCYXNlQXVkaW9QbGF5ZXJGdW5jdGlvbnMgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgcGxheWxpc3RTZXJ2aWNlO1xuICAgIGRpc3BsYXllZENvbHVtbnM6IHN0cmluZ1tdO1xuICAgIHRpbWVMaW5lRHVyYXRpb246IE1hdFNsaWRlcjtcbiAgICBkYXRhU291cmNlOiBNYXRUYWJsZURhdGFTb3VyY2U8VHJhY2s+O1xuICAgIHBhZ2luYXRvcjogTWF0UGFnaW5hdG9yO1xuICAgIHBsYXlsaXN0RGF0YTogVHJhY2tbXTtcbiAgICBkaXNwbGF5VGl0bGU6IGJvb2xlYW47XG4gICAgZGlzcGxheVBsYXlsaXN0OiBib29sZWFuO1xuICAgIHBhZ2VTaXplT3B0aW9uczogbnVtYmVyW107XG4gICAgZXhwYW5kZWQ6IGJvb2xlYW47XG4gICAgYXV0b1BsYXk6IGJvb2xlYW47XG4gICAgZGlzcGxheVZvbHVtZUNvbnRyb2xzOiBib29sZWFuO1xuICAgIHBsYXlsaXN0VHJhY2s6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihwbGF5bGlzdFNlcnZpY2U6IEF1ZGlvUGxheWVyU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBtYXRQYWdpbmF0b3I6IE1hdFBhZ2luYXRvcjtcbiAgICBzZXREYXRhU291cmNlQXR0cmlidXRlcygpOiB2b2lkO1xuICAgIG5leHRTb25nKCk6IHZvaWQ7XG4gICAgcHJldmlvdXNTb25nKCk6IHZvaWQ7XG4gICAgcmVzZXRTb25nKCk6IHZvaWQ7XG4gICAgc2VsZWN0VHJhY2soaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgY2hlY2tJZlNvbmdIYXNTdGFydGVkU2luY2VBdGxlYXN0VHdvU2Vjb25kcygpOiBib29sZWFuO1xuICAgIHBsYXlsaXN0OiBUcmFja1tdO1xufVxuIl19